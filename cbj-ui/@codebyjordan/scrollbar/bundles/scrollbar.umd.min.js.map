{"version":3,"file":"scrollbar.umd.min.js","sources":["~/@codebyjordan/scrollbar/models/scrollbar-options.ts","~/@codebyjordan/scrollbar/models/scrolbar-config.ts","~/@codebyjordan/scrollbar/services/window.token.ts","~/@codebyjordan/scrollbar/services/window.service.ts","~/@codebyjordan/scrollbar/services/scrollbar.service.ts","~/@codebyjordan/scrollbar/animations/easings.ts","~/@codebyjordan/scrollbar/directives/scrollbar.directive.ts","~/@codebyjordan/scrollbar/scrollbar.module.ts"],"sourcesContent":["import {Subject} from 'rxjs/Subject';\n\n/**\n * @interface {ScrollbarOptions}\n *\n * @property {boolean}          - isRoot         - flag to set when the scrollbar is used as the main windows scrollbar\n * @property {string}           - position       - The side of the window the scrollbar appears\n * @property {boolean}          - alwaysVisible  - flag to set when the scrollbar should remain visible\n * @property {number}           - visibleTimeout - the time before the scrollbar auto hides\n * @property {number}           - gridOffset     - the css value for the {position} property that is applied to the grid\n * @property {number}           - barOffset      - the css value for the {position} property that is applied to the bar\n * @property {Subject}          - toggleClasses  - for toggling classes on the 3 generated elements\n * @property {ScrollbarStyles}  - styles         - the styles to be applied to the 3 generated elements\n * @property {ScrollbarClasses} - classes        - the classes to be applied to the 3 generated elements\n */\nexport interface ScrollbarOptions {\n  isRoot?: boolean;\n  position?: string;\n  alwaysVisible?: boolean;\n  visibleTimeout?: number;\n  gridOffset?: string | number;\n  barOffset?: string | number;\n  toggleClasses?: Subject<{ el: string, classes: string, remove: boolean }>;\n  styles?: ScrollbarStyles;\n  classes?: ScrollbarClasses;\n}\n\n/**\n * @interface {ScrollbarStyles}\n *\n * Can contain a key for any of the three elements created by the directive (wrapper, grid, bar)\n * Each with an object containing any valid css properties as keys with a valid value as a string or number\n */\nexport interface ScrollbarStyles {\n  wrapper?: { [prop: string]: string | number };\n  grid?: { [prop: string]: string | number };\n  bar?: { [prop: string]: string | number };\n}\n\n/**\n * @interface {ScrollbarClasses}\n *\n * Can contain a key for any of the three elements created by the directive (wrapper, grid, bar)\n * Each key can take an array of class names\n */\nexport interface ScrollbarClasses {\n  wrapper?: string[];\n  grid?: string[];\n  bar?: string[];\n}\n/**\n * The default Scrollbar options\n * \n */\nexport const DEFAULT_SCROLLBAR: ScrollbarOptions = {\n  isRoot: false,\n  position: 'right',\n  alwaysVisible: false,\n  visibleTimeout: 3000,\n  gridOffset: 0,\n  barOffset: '.5rem',\n  styles: {\n    grid: {\n      'position': 'absolute',\n      'top': 0,\n      'bottom': 0,\n      'display': 'block',\n      'cursor': 'pointer',\n      'z-index': 99999,\n      'background': 'transparent',\n      'width': '1rem',\n      'border-radius': 0,\n      'margin': 0,\n      'transition': 'opacity 250ms ease-in-out'\n    },\n    bar: {\n      'position': 'absolute',\n      'top': 0,\n      'display': 'block',\n      'cursor': 'pointer',\n      'transition': 'opacity 250ms ease-in-out',\n      'z-index': 100000,\n      'background': '#495057',\n      'width': '.7rem',\n      'border-radius': '10px',\n      'margin': 0\n    }\n  },\n  classes: {\n    wrapper: ['cbj-scroll-wrapper'],\n    grid: ['cbj-scroll-grid'],\n    bar: ['cbj-scroll-bar']\n  }\n};\n","import {Subject} from 'rxjs/Subject';\nimport {DEFAULT_SCROLLBAR, ScrollbarOptions} from './scrollbar-options';\n/**\n * \\@class ScrollbarConfig\n * \n */\nexport class ScrollbarConfig {\n/**\n * The scrollbars options.\n * A deep merge of the default options and the user provided options\n * \n */\nprivate options: ScrollbarOptions;\n/**\n * @param {?} opt\n */\nconstructor(opt: ScrollbarOptions) {\n    this.mergeOptions(opt, true);\n  }\n/**\n * Merge the defaults and options by performing a deep merge\n * \n * \n * @param {?} opt\n * @param {?=} setOpt\n * @param {?=} mergeWith\n * @return {?}\n */\nmergeOptions(opt: ScrollbarOptions, setOpt: boolean = false, mergeWith?: ScrollbarOptions) {\n    let /** @type {?} */ defaults = DEFAULT_SCROLLBAR;\n    if (mergeWith) {\n      defaults = mergeWith;\n    }\n    let /** @type {?} */ styles = {};\n    let /** @type {?} */ classes = {};\n\n    // Perform a deep merge of the styles objects if user passes any\n    if (opt.styles) {\n      const /** @type {?} */ keys = Object.keys(opt.styles);\n      for (const /** @type {?} */ key of keys) {\n        styles[key] = { ...defaults.styles[key], ...opt.styles[key] };\n      }\n\n      styles = { ...defaults.styles, ...styles};\n    }else {\n      styles = {...defaults.styles};\n    }\n\n    // Concatenate any user defined classes with the defaults\n    if (opt.classes) {\n      const /** @type {?} */ keys = Object.keys(opt.classes);\n      for (const /** @type {?} */ key of keys) {\n        classes[key] = [...defaults.classes[key], ...opt.classes[key]];\n      }\n\n      classes = { ...defaults.classes, ...classes};\n    }else {\n      classes = {...defaults.classes};\n    }\n\n    const /** @type {?} */ out = { ...defaults, ...opt, ...{styles}, ...{classes} };\n    if (setOpt) {\n      this.options = out;\n    }\n\n    return out;\n  }\n/**\n *\n * @return {?}\n */\nget isRoot() {\n    return this.options.isRoot;\n  }\n/**\n *\n * @return {?}\n */\nget position() {\n    return this.options.position;\n  }\n/**\n *\n * @return {?}\n */\nget alwaysVisible() {\n    return this.options.alwaysVisible;\n  }\n/**\n *\n * @return {?}\n */\nget visibleTimeout() {\n    return this.options.visibleTimeout;\n  }\n/**\n *\n * @return {?}\n */\nget gridOffset() {\n    return this.options.gridOffset;\n  }\n/**\n *\n * @return {?}\n */\nget barOffset() {\n    return this.options.barOffset;\n  }\n/**\n *\n * @return {?}\n */\nget toggleClasses() {\n    return this.options.toggleClasses;\n  }\n/**\n *\n * @return {?}\n */\nget wStyles() {\n    return this.options.styles.wrapper;\n  }\n/**\n *\n * @return {?}\n */\nget gStyles() {\n    return this.options.styles.grid;\n  }\n/**\n *\n * @return {?}\n */\nget bStyles() {\n    return this.options.styles.bar;\n  }\n/**\n *\n * @return {?}\n */\nget wClass() {\n    return this.options.classes.wrapper;\n  }\n/**\n *\n * @return {?}\n */\nget gClass() {\n    return this.options.classes.grid;\n  }\n/**\n *\n * @return {?}\n */\nget bClass() {\n    return this.options.classes.bar;\n  }\n}\n\nfunction ScrollbarConfig_tsickle_Closure_declarations() {\n/**\n * The scrollbars options.\n * A deep merge of the default options and the user provided options\n * \n * @type {?}\n */\nScrollbarConfig.prototype.options;\n}\n\n","import {InjectionToken} from '@angular/core';\n\nexport const /** @type {?} */ WINDOW = new InjectionToken('Window');\n/**\n * @return {?}\n */\nexport function _window() { return window; }","import { Inject, Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport'rxjs/add/observable/fromEvent';\nimport { WINDOW } from './window.token';\nexport class WindowService {\n/**\n * Observable of the window resize event\n */\nresizeObs: Observable<any>;\nprivate _height: number;\n/**\n * @param {?} w\n */\nconstructor(\nprivate w: Window) {\n    this.resizeObs = Observable.fromEvent(w, 'resize');\n  }\n/**\n * Get the browsers window object\n * \n * @return {?}\n */\nget window() {\n    return this.w;\n  }\n/**\n * Get the width of the window\n * \n * @return {?}\n */\nget width(): number {\n    return this.w.innerWidth;\n  }\n/**\n * Return whether device is on a screen < 992px wide\n * \n * @return {?}\n */\nget isMobile() {\n    return this.width < 992;\n  }\n/**\n * Get the height of the window\n * \n * @return {?}\n */\nget height(): number {\n    return this._height ? this._height : this.w.innerHeight;\n  }\n/**\n * Set the height of the window\n * \n * @param {?} height\n * @return {?}\n */\nset height(height: number) {\n    this._height = height;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Window, decorators: [{ type: Inject, args: [WINDOW, ] }, ]},\n];\n}\n\nfunction WindowService_tsickle_Closure_declarations() {\n/** @type {?} */\nWindowService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nWindowService.ctorParameters;\n/**\n * Observable of the window resize event\n * @type {?}\n */\nWindowService.prototype.resizeObs;\n/** @type {?} */\nWindowService.prototype._height;\n/** @type {?} */\nWindowService.prototype.w;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {ElementRef, Inject, Injectable, OnDestroy} from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\nimport {Subject} from 'rxjs/Subject';\nimport'rxjs/add/observable/from';\nimport'rxjs/add/observable/fromEvent';\nimport'rxjs/add/observable/merge';\nimport'rxjs/add/operator/mergeMap';\nimport'rxjs/add/operator/takeUntil';\nimport'rxjs/add/operator/map';\nimport {WindowService} from './window.service';\nimport {DOCUMENT} from '@angular/common';\nexport class ScrollbarService implements OnDestroy {\n  scrollObs: Observable<number>;\n  scrollPos: number;\n  childScrolling: boolean;\n  scrollSubj: Subject<number> = new Subject();\nprivate _scrollHeight: number;\nprivate ngUnsubscribe: Subject<void> = new Subject();\n/**\n * @param {?} ws\n * @param {?} doc\n */\nconstructor(private ws: WindowService,\nprivate doc: Document) {\n    this.scrollObs = Observable.from(this.scrollSubj);\n    this.childScrolling = false;\n  }\n/**\n * @return {?}\n */\nget scrollHeight() {\n    return this._scrollHeight ? this._scrollHeight : this.doc.documentElement.scrollHeight;\n  }\n/**\n * @param {?} height\n * @return {?}\n */\nset scrollHeight(height: number) {\n    this._scrollHeight = height;\n  }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n    this.ngUnsubscribe.next();\n    this.ngUnsubscribe.complete();\n  }\n/**\n * @param {?} el\n * @return {?}\n */\npublic initWheel(el: HTMLElement): Observable<any> {\n    const /** @type {?} */ dommousescroll = Observable.fromEvent(el, 'DOMMouseScroll');\n    const /** @type {?} */ mousewheel = Observable.fromEvent(el, 'mousewheel');\n    const /** @type {?} */ wheel = Observable.fromEvent(el, 'wheel');\n\n    return Observable.merge(...[dommousescroll, mousewheel, wheel])\n      .map((e: WheelEvent) => {\n        e.preventDefault();\n\n        const /** @type {?} */ data = {x: 0, y: 0, type: 'wheel'};\n        if (e.wheelDelta) {\n          data.y = -1 / 40 * e.wheelDelta;\n          data.x = e.wheelDeltaX ? -1 / 40 * e.wheelDeltaX : 0;\n        } else {\n          data.y = e.deltaY || e.detail;\n        }\n        return data;\n      });\n  }\n/**\n * @param {?} el\n * @param {?} bar\n * @return {?}\n */\npublic initDrag(el: HTMLElement, bar: HTMLElement):\n  { start: Observable<any>, end: Observable<any>, move: Observable<any> } {\n    let /** @type {?} */ observs;\n\n    const /** @type {?} */ mousemove = Observable.fromEvent(this.ws.window, 'mousemove');\n    const /** @type {?} */ mousedown = Observable.fromEvent(bar, 'mousedown');\n    const /** @type {?} */ mouseup = Observable.fromEvent(this.ws.window, 'mouseup');\n\n    const /** @type {?} */ mousedrag = mousedown.mergeMap((e: MouseEvent) => {\n      const /** @type {?} */ pageY = e.pageY;\n      const /** @type {?} */ top = parseFloat(getComputedStyle(bar).top);\n\n      return mousemove.map((emove: MouseEvent) => {\n        emove.preventDefault();\n        return top + emove.pageY - pageY;\n      }).takeUntil(mouseup);\n    });\n\n    observs = {\n      start: mousedrag,\n      end: mouseup,\n      move: mousemove\n    };\n\n    if (this.ws.isMobile) {\n      const /** @type {?} */ touchmove = Observable.fromEvent(this.ws.window, 'touchmove');\n      const /** @type {?} */ touchstart = Observable.fromEvent(el, 'touchstart');\n      const /** @type {?} */ touchend = Observable.fromEvent(this.ws.window, 'touchend');\n\n      const /** @type {?} */ touchdrag = touchstart.mergeMap((e: TouchEvent) => {\n        const /** @type {?} */ pageY = e.targetTouches[0].pageY;\n        const /** @type {?} */ top = -parseFloat(getComputedStyle(bar).top);\n\n        return touchmove.map((tmove: TouchEvent) => {\n          return -(top + tmove.targetTouches[0].pageY - pageY);\n        }).takeUntil(touchend);\n      });\n\n      observs = {\n        start: Observable.merge(...[mousedrag, touchdrag]),\n        end: Observable.merge(...[mouseup, touchend]),\n        move: Observable.merge(...[mousemove, touchstart])\n      };\n    }\n\n    return observs;\n  }\n/**\n * Get an elements distance in pixels from the top\n * \n * @param {?} el\n * @return {?}\n */\npublic getElOffsetTop(el: ElementRef): number {\n    const /** @type {?} */ viewportTop = el.nativeElement.getBoundingClientRect().top;\n    const /** @type {?} */ clientTop = el.nativeElement.clientTop;\n\n    return viewportTop + this.scrollPos - clientTop;\n\n  }\n/**\n * Get an elements distance in pixels from the bottom\n * \n * @param {?} el\n * @return {?}\n */\npublic getElOffsetBottom(el: ElementRef): number {\n    const /** @type {?} */ viewportTop = el.nativeElement.getBoundingClientRect().top;\n    const /** @type {?} */ clientBottom = el.nativeElement.clientTop + el.nativeElement.clientHeight;\n\n    return viewportTop + this.scrollPos - clientBottom;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: WindowService, },\n{type: Document, decorators: [{ type: Inject, args: [DOCUMENT, ] }, ]},\n];\n}\n\nfunction ScrollbarService_tsickle_Closure_declarations() {\n/** @type {?} */\nScrollbarService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nScrollbarService.ctorParameters;\n/** @type {?} */\nScrollbarService.prototype.scrollObs;\n/** @type {?} */\nScrollbarService.prototype.scrollPos;\n/** @type {?} */\nScrollbarService.prototype.childScrolling;\n/** @type {?} */\nScrollbarService.prototype.scrollSubj;\n/** @type {?} */\nScrollbarService.prototype._scrollHeight;\n/** @type {?} */\nScrollbarService.prototype.ngUnsubscribe;\n/** @type {?} */\nScrollbarService.prototype.ws;\n/** @type {?} */\nScrollbarService.prototype.doc;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","export const /** @type {?} */ easing: { [key: string]: Function } = {\n  linear: (t: number) => t,\n  inQuad: (t: number) => t * t,\n  outQuad: (t: number) => t * (2 - t ),\n  inOutQuad: (t: number) => t < .5 ? 2 * t * t : -1 + (4 - 2 * t) * t,\n  inCubic: (t: number) => t * t * t,\n  outCubic: (t: number) => (--t) * t * t + 1,\n  inOutCubic: (t: number) => t < .5 ? 4 * t * t * t : (t - 1) * ( 2 * t - 2) * (2 * t - 2) + 1,\n  inQuart: (t: number) => t * t * t * t,\n  outQuart: (t: number) => 1 - (--t) * t * t * t,\n  inOutQuart: (t: number) => t < .5 ? 8 * t * t * t * t : 1 - 8 * (--t) * t * t * t,\n  inQuint: (t: number) => t * t * t * t * t,\n  outQuint: (t: number) => 1 + (--t) * t * t * t * t,\n  inOutQuint: (t: number) => t < .5 ? 16 * t * t * t * t * t : 1 + 16 * (--t) * t * t * t * t\n};\n","import {\n  AfterViewChecked, AfterViewInit, Directive, ElementRef, Inject, Input, OnDestroy, OnInit, Optional,\n  Renderer2\n} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Observable';\nimport'rxjs/add/operator/takeUntil';\nimport'rxjs/add/operator/filter';\nimport { easing } from '../animations/easings';\nimport { NavigationStart, Router } from '@angular/router';\nimport { ScrollbarConfig } from '../models/scrolbar-config';\nimport { WindowService } from '../services/window.service';\nimport { ScrollbarService } from '../services/scrollbar.service';\nimport {el} from '@angular/platform-browser/testing/src/browser_util';\nexport class CbjScrollbarDirective implements OnInit, AfterViewInit, AfterViewChecked, OnDestroy {\n/**\n * The scrollbars configuration object\n * \n */\nconfig: ScrollbarConfig;\n/**\n * The wrapper Element\n * \n */\nprivate wrapper: HTMLElement;\n/**\n * The grid Element\n * \n */\nprivate grid: HTMLElement;\n/**\n * The bar Element\n * \n */\nprivate bar: HTMLElement;\n/**\n * The height of the scrollable content.\n * \n */\nprivate scrollHeight: number;\n/**\n * The timeout for hiding the scrollbar\n * \n */\nprivate timeout: any;\n/**\n * Indicates whether the scrollbar needs to be shown\n * \n */\nprivate notNeeded: boolean;\n/**\n * Indicates whether the scrollbar is hidden\n * \n */\nprivate hidden: boolean;\n/**\n * Subject to unsubscribe from Observables\n * \n */\nprivate unsubscribe = new Subject<void>();\n/**\n *\n * @param {?} el\n * @param {?} renderer\n * @param {?} scroll\n * @param {?} ws\n * @param {?} doc\n * @param {?} router\n */\nconstructor(private el: ElementRef,\nprivate renderer: Renderer2,\nprivate scroll: ScrollbarService,\nprivate ws: WindowService,\nprivate doc: Document,\nprivate router: Router) {\n  }\n/**\n * @return {?}\n */\nngOnInit() {\n    // Start Working\n    this.createScrollbar();\n  }\n/**\n * @return {?}\n */\nngAfterViewInit() {\n    // Wait 250ms or else scrollbar breaks on page load in FF, then calculate and set the bar height\n    setTimeout(this.setBarHeight, 250);\n  }\n/**\n * @return {?}\n */\nngAfterViewChecked() {\n    // Check if scrollHeight has changed and recalculate bar height if so\n    const /** @type {?} */ dif = this.scrollHeight !== Math.round(this.el.nativeElement.scrollHeight);\n    if (dif) {\n      this.setBarHeight();\n    }\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    // do some cleanup and unsubscribe from our Observables\n    this.unsubscribe.next();\n    this.unsubscribe.complete();\n  }\n/**\n * @return {?}\n */\nprivate createScrollbar() {\n    this.setParentsStyles();\n    this.setElementStyle();\n    this.renderWrapper();\n    this.renderGrid();\n    this.renderBar();\n    this.subscribe();\n  }\n/**\n * Here we set the hosts parent to position relative\n * Additionally, to prevent a scrollbar from appearing in FF, we set the body to overflow hidden\n * @return {?}\n */\nprivate setParentsStyles(): void {\n    const /** @type {?} */ natEl = this.el.nativeElement;\n    const /** @type {?} */ parent = this.renderer.parentNode(natEl);\n    this.renderer.setStyle(parent, 'position', 'relative');\n\n    const /** @type {?} */ body = this.doc.getElementsByTagName('BODY')[0];\n    this.renderer.setStyle(body, 'overflow', 'hidden');\n  }\n/**\n * Sets styles on host element\n * \n * @return {?}\n */\nprivate setElementStyle(): void {\n    const /** @type {?} */ natEl = this.el.nativeElement;\n    this.renderer.setStyle(natEl, 'overflow', 'hidden');\n  }\n/**\n * Creates, configures, and inserts wrapper element\n * The wrapper will go around all elements, including the host element\n * \n * Element Properties\n * -- classes defined in config. \\@default: 'cbj-scroll-wrapper'\n * -- margin and height are obtained from the host element\n * -- width set to 100% to fix issue in FF where content did not fill available space\n * -- styles defined in config. \\@default: {}\n * @return {?}\n */\nprivate renderWrapper(): void {\n    // Get ref to containing div and create element\n    const /** @type {?} */ natEl = this.el.nativeElement;\n    this.wrapper = this.renderer.createElement('div');\n\n    // Add Classes\n    for (const /** @type {?} */ cls of this.config.wClass) {\n      this.renderer.addClass(this.wrapper, cls);\n    }\n\n    // Set Dynamic Styles. Wait 250ms since FF was too fast & height was still undefined\n    setTimeout(() => {\n      this.renderer.setStyle(this.wrapper, 'margin', getComputedStyle(natEl).margin);\n      this.renderer.setStyle(this.wrapper, 'height', getComputedStyle(natEl).height);\n    }, 250);\n\n    // Set Other Styles\n    this.renderer.setStyle(this.wrapper, 'width', '100%'); // Fixes issue in FF\n    for (const /** @type {?} */ prop in this.config.wStyles) {\n      if (this.config.wStyles.hasOwnProperty(prop)) {\n        this.renderer.setStyle(this.wrapper, prop, this.config.wStyles[prop]);\n      }\n    }\n\n    // Insert the wrapper before the host el and then move the host and its contents inside the wrapper\n    this.renderer.insertBefore(this.renderer.parentNode(natEl), this.wrapper, natEl);\n    this.renderer.appendChild(this.wrapper, natEl);\n  }\n/**\n * Creates, configures, and inserts grid element\n * The grid is the element placed behind the scrollbar. It goes from the top to the bottom of the wrapper\n * \n * ElementProperties\n * -- classes defined in config \\@default: 'cbj-scroll-grid'\n * -- config.position set to config.gridOffset \\@default: 'right': 0\n * -- opacity set to 0 if alwaysVisible false\n * -- styles set in config \\@default: {\n * 'position': 'absolute',\n * 'top': 0,\n * 'bottom': 0,\n * 'display': 'block',\n * 'cursor': 'pointer',\n * 'z-index': 99999,\n * 'background': 'transparent',\n * 'width': '1rem',\n * 'border-radius': 0,\n * 'margin': 0,\n * 'transition': 'opacity 250ms ease-in-out'\n * }\n * \n * @return {?}\n */\nprivate renderGrid(): void {\n    // Create element\n    this.grid = this.renderer.createElement('div');\n\n    // Add Classes\n    for (const /** @type {?} */ cls of this.config.gClass) {\n      this.renderer.addClass(this.grid, cls);\n    }\n\n    // Set Styles\n    this.renderer.setStyle(this.grid, this.config.position, this.config.gridOffset);\n    for (const /** @type {?} */ prop in this.config.gStyles) {\n      if (this.config.gStyles.hasOwnProperty(prop)) {\n        this.renderer.setStyle(this.grid, prop, this.config.gStyles[prop]);\n      }\n    }\n\n    // Hide grid if alwaysVisible not set\n    if (!this.config.alwaysVisible) {\n      this.renderer.setStyle(this.grid, 'opacity', 0);\n    }\n\n    // Insert the element\n    this.renderer.appendChild(this.wrapper, this.grid);\n  }\n/**\n * Creates, configures, and inserts bar element\n * \n * ElementProperties\n * -- classes defined in config \\@default: 'cbj-scroll-bar'\n * -- config.position set to config.gridOffset \\@default: 'right': '.5rem'\n * -- transform set to translate3d([50% | -50%], 0, 0) to center the bar. translate3d used to work on the gpu\n * -- opacity set to 0 if alwaysVisible false\n * -- styles set in config \\@default: {\n * 'position': 'absolute',\n * 'top': 0,\n * 'display': 'block',\n * 'cursor': 'pointer',\n * 'transition': 'opacity 250ms ease-in-out',\n * 'z-index': 100000,\n * 'background': '#495057',\n * 'width': '.7rem',\n * 'border-radius': '10px',\n * 'margin': 0\n * }\n * \n * @return {?}\n */\nprivate renderBar(): void {\n    // Create element\n    this.bar = this.renderer.createElement('div');\n\n    // Add Classes\n    for (const /** @type {?} */ cls of this.config.bClass) {\n      this.renderer.addClass(this.bar, cls);\n    }\n\n    // Center the bar in the grid. Using translate3d to utilize gpu\n    const /** @type {?} */ translate = this.config.position === 'right' ? 'translate3d(50%, 0, 0)' : 'translate3d(-50%, 0, 0)';\n    this.renderer.setStyle(this.bar, 'transform', translate);\n\n    // Set Styles\n    this.renderer.setStyle(this.bar, this.config.position, this.config.barOffset);\n    for (const /** @type {?} */ prop in this.config.bStyles) {\n      if (this.config.bStyles.hasOwnProperty(prop)) {\n        this.renderer.setStyle(this.bar, prop, this.config.bStyles[prop]);\n      }\n    }\n\n    // Hide bar if alwaysVisible not set\n    if (!this.config.alwaysVisible) {\n      this.renderer.setStyle(this.bar, 'opacity', 0);\n      this.hidden = true;\n    } else {\n      this.hidden = false;\n    }\n\n    // Insert the element\n    this.renderer.appendChild(this.wrapper, this.bar);\n  }\n/**\n * Measure the window and set the bars height\n */\nprivate setBarHeight = () => {\n    const natEl = this.el.nativeElement;\n    this.scrollHeight = Math.round(natEl.scrollHeight);\n\n    const barHeight = (natEl.offsetHeight / natEl.scrollHeight) * natEl.offsetHeight;\n\n    this.renderer.setStyle(this.bar, 'height', `${barHeight}px`);\n\n    if (!this.barNeeded(natEl.offsetHeight, barHeight) ||\n        !this.config.alwaysVisible ||\n        this.hidden\n    ) {\n      this.showHideBarGrid();\n    }\n\n    if (this.config.isRoot) {\n      this.ws.height = natEl.clientHeight;\n      this.scroll.scrollHeight = this.scrollHeight;\n    }\n  }\n/**\n * Subscribe to all the Observables\n * @return {?}\n */\nprivate subscribe(): void {\n    const /** @type {?} */ natEl = this.el.nativeElement;\n    const /** @type {?} */ drag = this.scroll.initDrag(natEl, this.bar);\n\n    this.scroll.initWheel(natEl)\n      .takeUntil(this.unsubscribe)\n      .subscribe(this.scrollWheel);\n\n    this.ws.resizeObs.takeUntil(this.unsubscribe).subscribe(this.setBarHeight);\n\n    drag.start.takeUntil(this.unsubscribe).subscribe(this.dragStart);\n\n    drag.end.takeUntil(this.unsubscribe).subscribe(this.dragEnd);\n\n    if (!this.config.alwaysVisible) {\n      drag.move.takeUntil(this.unsubscribe).subscribe(this.resetTime);\n    }\n\n    if (this.config.isRoot && this.router) {\n      this.router.events\n        .filter(event => event instanceof NavigationStart)\n        .subscribe((e: NavigationStart) => {\n          this.scrollTo(0, 100, 'linear');\n        });\n    }\n\n    if (this.config.toggleClasses) {\n      Observable.from(this.config.toggleClasses)\n        .takeUntil(this.unsubscribe)\n        .subscribe(this.toggleClasses);\n    }\n  }\n/**\n * Toggle a class on one of the 3 created elements\n * \n * @param nxt { {el: string, classes: string, remove: boolean} }\n */\nprivate toggleClasses = (nxt: {el: string, classes: string, remove: boolean}) => {\n    if (nxt.remove) {\n      this.renderer.removeClass(this[nxt.el], nxt.classes);\n    } else {\n      this.renderer.addClass(this[nxt.el], nxt.classes);\n    }\n  }\nprivate showHideBarGrid = () => {\n    const /** @type {?} */ natEl = this.el.nativeElement;\n    const /** @type {?} */ barHeight = (natEl.offsetHeight / natEl.scrollHeight) * natEl.offsetHeight;\n\n    this.notNeeded = !this.barNeeded(natEl.offsetHeight, barHeight);\n\n    if (!this.hidden) {\n      if (this.notNeeded || !this.config.alwaysVisible) {\n        this.renderer.setStyle(this.grid, 'opacity', 0);\n        this.renderer.setStyle(this.bar, 'opacity', 0);\n        this.hidden = true;\n      }\n    } else {\n      if (!this.notNeeded) {\n        this.renderer.setStyle(this.grid, 'opacity', 1);\n        this.renderer.setStyle(this.bar, 'opacity', 1);\n        this.hidden = false;\n\n        if (!this.config.alwaysVisible) {\n          clearTimeout(this.timeout);\n          this.timeout = setTimeout(this.showHideBarGrid, this.config.visibleTimeout);\n        }\n      }\n    }\n  }\n/**\n * Checks difference between bar height and content height. returns true if bar is needed\n * \n * \n * @param {?} elHeight\n * @param {?} barHeight\n * @return {?}\n */\nprivate barNeeded(elHeight: number, barHeight: number): boolean {\n    return Math.round(elHeight) - Math.round(barHeight) > 2;\n  }\n/**\n * Resets the timeout for hiding the scrollbar\n */\nprivate resetTime = () => {\n    clearTimeout(this.timeout);\n\n    if (this.hidden && !this.notNeeded) {\n      this.renderer.setStyle(this.grid, 'opacity', 1);\n      this.renderer.setStyle(this.bar, 'opacity', 1);\n      this.hidden = false;\n    }\n\n    this.timeout = setTimeout(this.showHideBarGrid, this.config.visibleTimeout);\n  }\n/**\n * Called on mouse drag while mouse down or called on touch drag while touch down\n * \n */\nprivate dragStart = (top: number) => {\n    if (!this.config.isRoot) {\n      this.scroll.childScrolling = true;\n    }\n    if (!this.config.isRoot || (this.config.isRoot && this.scroll.childScrolling === false)) {\n      this.renderer.setStyle(this.bar, 'top', `${top}px`);\n      this.scrollContent();\n    }\n  }\nprivate scrollContent = () => {\n    const /** @type {?} */ natEl = this.el.nativeElement;\n    const /** @type {?} */ maxTop = natEl.offsetHeight - this.bar.offsetHeight;\n    let /** @type {?} */ percentScroll: number;\n\n    let /** @type {?} */ delta = parseInt(getComputedStyle(this.bar).top, 10);\n    delta = Math.min(Math.max(delta, 0), maxTop);\n    delta = Math.floor(delta);\n    this.renderer.setStyle(this.bar, 'top', delta + 'px');\n\n    percentScroll = parseInt(getComputedStyle(this.bar).top, 10) / (natEl.offsetHeight - this.bar.offsetHeight);\n    delta = percentScroll * (natEl.scrollHeight - natEl.offsetHeight);\n\n    natEl.scrollTop = delta;\n\n    if (this.config.isRoot) {\n      this.scroll.scrollPos = delta;\n      this.scroll.scrollSubj.next(delta);\n    }\n  }\n/**\n * Called on drag-end event\n */\nprivate dragEnd = () => {\n    const natEl = this.el.nativeElement;\n    const paddingTop = parseInt(natEl.style.paddingTop, 10);\n    const paddingBottom = parseInt(natEl.style.paddingBottom, 10);\n\n    if (paddingTop > 0 || paddingBottom > 0) {\n      this.scrollTo(0, 300, 'inOutCubic');\n    }\n    if (!this.config.isRoot) {\n      this.scroll.childScrolling = false;\n    }\n  }\nprivate scrollWheel = (event: { x: number, y: number, type: string }) => {\n    if (!this.config.isRoot) {\n      this.scroll.childScrolling = true;\n    }\n    const /** @type {?} */ natEl = this.el.nativeElement;\n    const /** @type {?} */ start = Date.now();\n    const /** @type {?} */ maxTop = natEl.offsetHeight - this.bar.offsetHeight;\n    let /** @type {?} */ percentScroll: number;\n    let /** @type {?} */ delta;\n\n    const /** @type {?} */ scroll = () => {\n      const /** @type {?} */ currentTime = Date.now();\n      const /** @type {?} */ time = Math.min(1, ((currentTime - start) / 200));\n      const /** @type {?} */ easedTime = easing.inOutQuad(time);\n\n      delta = parseInt(getComputedStyle(this.bar).top, 10) + event.y * easedTime;\n\n      delta = Math.min(Math.max(delta, 0), maxTop);\n      delta = (event.y > 0) ? Math.ceil(delta) : Math.floor(delta);\n      this.renderer.setStyle(this.bar, 'top', delta + 'px');\n\n      percentScroll = parseInt(getComputedStyle(this.bar).top, 10) / (natEl.offsetHeight - this.bar.offsetHeight);\n      delta = percentScroll * (natEl.scrollHeight - natEl.offsetHeight);\n\n      natEl.scrollTop = delta;\n\n      if (this.config.isRoot) {\n        this.scroll.scrollPos = delta;\n        this.scroll.scrollSubj.next(delta);\n      }\n\n      if (time < 1) {\n        requestAnimationFrame(scroll);\n      }\n      if (!this.config.isRoot) {\n        this.scroll.childScrolling = false;\n      }\n    };\n\n    if (!this.config.isRoot || (this.config.isRoot && this.scroll.childScrolling === false)) {\n      requestAnimationFrame(scroll);\n    }\n  }\n/**\n * @param {?} y\n * @param {?} duration\n * @param {?} easingFunc\n * @return {?}\n */\nprivate scrollTo(y: number, duration: number, easingFunc: string): void {\n    const /** @type {?} */ natEl = this.el.nativeElement;\n    const /** @type {?} */ start = Date.now();\n    const /** @type {?} */ from = natEl.scrollTop;\n    const /** @type {?} */ maxElScrollTop = natEl.scrollHeight - natEl.clientHeight;\n    const /** @type {?} */ barHeight = Math.max((natEl.offsetHeight / natEl.scrollHeight) * natEl.offsetHeight, 30);\n    const /** @type {?} */ paddingTop = parseInt(natEl.style.paddingTop, 10) || 0;\n    const /** @type {?} */ paddingBottom = parseInt(natEl.style.paddingBottom, 10) || 0;\n\n    const /** @type {?} */ scroll = () => {\n      const /** @type {?} */ currentTime = Date.now();\n      const /** @type {?} */ time = Math.min(1, ((currentTime - start) / duration));\n      const /** @type {?} */ easedTime = easing[easingFunc](time);\n\n      if (paddingTop > 0 || paddingBottom > 0) {\n        let /** @type {?} */ fromY = null;\n\n        if (paddingTop > 0) {\n          fromY = -paddingTop;\n          fromY = -((easedTime * (y - fromY)) + fromY);\n          this.renderer.setStyle(natEl, 'paddingTop', `${fromY}px`);\n        }\n\n        if (paddingBottom > 0) {\n          fromY = paddingBottom;\n          fromY = ((easedTime * (y - fromY)) + fromY);\n          this.renderer.setStyle(natEl, 'paddingBottom', `${fromY}px`);\n        }\n      } else {\n        natEl.scrollTop = (easedTime * (y - from)) + from;\n      }\n\n      const /** @type {?} */ percentScroll = natEl.scrollTop / maxElScrollTop;\n      if (paddingBottom === 0) {\n        const /** @type {?} */ delta = Math.round(Math.round(natEl.clientHeight * percentScroll) - barHeight);\n        if (delta > 0) {\n          this.renderer.setStyle(this.bar, 'top', `${delta}px`);\n        } else {\n          this.renderer.setStyle(this.bar, 'top', `0`);\n        }\n      }\n\n      if (time < 1) {\n        requestAnimationFrame(scroll);\n      }\n    };\n\n    requestAnimationFrame(scroll);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[cbjScrollbar]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n{type: ScrollbarService, },\n{type: WindowService, },\n{type: Document, decorators: [{ type: Inject, args: [DOCUMENT, ] }, ]},\n{type: Router, decorators: [{ type: Optional }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'config': [{ type: Input, args: ['cbjScrollbar', ] },],\n};\n}\n\nfunction CbjScrollbarDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nCbjScrollbarDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCbjScrollbarDirective.ctorParameters;\n/** @type {?} */\nCbjScrollbarDirective.propDecorators;\n/**\n * The scrollbars configuration object\n * \n * @type {?}\n */\nCbjScrollbarDirective.prototype.config;\n/**\n * The wrapper Element\n * \n * @type {?}\n */\nCbjScrollbarDirective.prototype.wrapper;\n/**\n * The grid Element\n * \n * @type {?}\n */\nCbjScrollbarDirective.prototype.grid;\n/**\n * The bar Element\n * \n * @type {?}\n */\nCbjScrollbarDirective.prototype.bar;\n/**\n * The height of the scrollable content.\n * \n * @type {?}\n */\nCbjScrollbarDirective.prototype.scrollHeight;\n/**\n * The timeout for hiding the scrollbar\n * \n * @type {?}\n */\nCbjScrollbarDirective.prototype.timeout;\n/**\n * Indicates whether the scrollbar needs to be shown\n * \n * @type {?}\n */\nCbjScrollbarDirective.prototype.notNeeded;\n/**\n * Indicates whether the scrollbar is hidden\n * \n * @type {?}\n */\nCbjScrollbarDirective.prototype.hidden;\n/**\n * Subject to unsubscribe from Observables\n * \n * @type {?}\n */\nCbjScrollbarDirective.prototype.unsubscribe;\n/**\n * Measure the window and set the bars height\n * @type {?}\n */\nCbjScrollbarDirective.prototype.setBarHeight;\n/**\n * Toggle a class on one of the 3 created elements\n * \n * \\@param nxt { {el: string, classes: string, remove: boolean} }\n * @type {?}\n */\nCbjScrollbarDirective.prototype.toggleClasses;\n/** @type {?} */\nCbjScrollbarDirective.prototype.showHideBarGrid;\n/**\n * Resets the timeout for hiding the scrollbar\n * @type {?}\n */\nCbjScrollbarDirective.prototype.resetTime;\n/**\n * Called on mouse drag while mouse down or called on touch drag while touch down\n * \n * @type {?}\n */\nCbjScrollbarDirective.prototype.dragStart;\n/** @type {?} */\nCbjScrollbarDirective.prototype.scrollContent;\n/**\n * Called on drag-end event\n * @type {?}\n */\nCbjScrollbarDirective.prototype.dragEnd;\n/** @type {?} */\nCbjScrollbarDirective.prototype.scrollWheel;\n/** @type {?} */\nCbjScrollbarDirective.prototype.el;\n/** @type {?} */\nCbjScrollbarDirective.prototype.renderer;\n/** @type {?} */\nCbjScrollbarDirective.prototype.scroll;\n/** @type {?} */\nCbjScrollbarDirective.prototype.ws;\n/** @type {?} */\nCbjScrollbarDirective.prototype.doc;\n/** @type {?} */\nCbjScrollbarDirective.prototype.router;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { WINDOW, _window } from './services/window.token';\nimport { WindowService } from './services/window.service';\nimport { ScrollbarService } from './services/scrollbar.service';\nimport { CbjScrollbarDirective } from './directives/scrollbar.directive';\nexport class CbjScrollbarModule {\n/**\n * @return {?}\n */\nstatic forRoot(): ModuleWithProviders {\n    return {\n      ngModule: CbjScrollbarModule,\n      providers: [\n        { provide: WINDOW, useFactory: _window },\n        WindowService,\n        ScrollbarService\n      ]\n    };\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    CbjScrollbarDirective\n  ],\n  exports: [\n    CbjScrollbarDirective\n  ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction CbjScrollbarModule_tsickle_Closure_declarations() {\n/** @type {?} */\nCbjScrollbarModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCbjScrollbarModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":["DEFAULT_SCROLLBAR","isRoot","position","alwaysVisible","visibleTimeout","gridOffset","barOffset","styles","grid","top","bottom","display","cursor","z-index","background","width","border-radius","margin","transition","bar","classes","wrapper","ScrollbarConfig","opt","this","mergeOptions","prototype","setOpt","mergeWith","defaults","_i","keys_1","Object","keys","length","key","assign","_a","keys_2","concat","out","options","defineProperty","get","toggleClasses","WINDOW","InjectionToken","_window","window","WindowService","w","resizeObs","Observable","fromEvent","innerWidth","_height","innerHeight","set","height","decorators","type","Injectable","ctorParameters","Window","Inject","args","ScrollbarService","ws","doc","scrollSubj","Subject","ngUnsubscribe","scrollObs","from","childScrolling","_scrollHeight","documentElement","scrollHeight","ngOnDestroy","next","complete","initWheel","el","dommousescroll","mousewheel","wheel","merge","apply","map","e","preventDefault","data","x","y","wheelDelta","wheelDeltaX","deltaY","detail","initDrag","observs","mousemove","mousedown","mouseup","mousedrag","mergeMap","pageY","parseFloat","getComputedStyle","emove","takeUntil","start","end","move","isMobile","touchmove_1","touchstart","touchend_1","touchdrag","targetTouches","tmove","getElOffsetTop","viewportTop","nativeElement","getBoundingClientRect","clientTop","scrollPos","getElOffsetBottom","clientBottom","clientHeight","Document","DOCUMENT","easing","linear","t","inQuad","outQuad","inOutQuad","inCubic","outCubic","inOutCubic","inQuart","outQuart","inOutQuart","inQuint","outQuint","inOutQuint","CbjScrollbarDirective","renderer","scroll","router","_this","unsubscribe","setBarHeight","natEl","Math","round","barHeight","offsetHeight","setStyle","barNeeded","config","hidden","showHideBarGrid","nxt","remove","removeClass","addClass","notNeeded","clearTimeout","timeout","setTimeout","resetTime","dragStart","scrollContent","maxTop","delta","parseInt","min","max","floor","scrollTop","dragEnd","paddingTop","style","paddingBottom","scrollTo","scrollWheel","event","percentScroll","Date","now","currentTime","time","easedTime","ceil","requestAnimationFrame","ngOnInit","createScrollbar","ngAfterViewInit","ngAfterViewChecked","setParentsStyles","setElementStyle","renderWrapper","renderGrid","renderBar","subscribe","parent","parentNode","body","getElementsByTagName","createElement","wClass","cls","prop","wStyles","hasOwnProperty","insertBefore","appendChild","gClass","gStyles","bClass","translate","bStyles","drag","events","filter","NavigationStart","elHeight","duration","easingFunc","maxElScrollTop","fromY","Directive","selector","ElementRef","Renderer2","Router","Optional","propDecorators","Input","CbjScrollbarModule","forRoot","ngModule","providers","provide","useFactory","NgModule","imports","CommonModule","declarations","exports"],"mappings":"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"}
